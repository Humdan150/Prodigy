def caesar_encrypt(text: str, shift: int) -> str:
    """
    Encrypts the input text using the Caesar Cipher with the given shift value.

    Args:
        text (str): The input text to encrypt.
        shift (int): The shift value to use for encryption.

    Returns:
        str: The encrypted text.
    """
    encrypted_text = ""
    for char in text:
        if char.isalpha():
            ascii_offset = 97 if char.islower() else 65
            encrypted_text += chr((ord(char) - ascii_offset + shift) % 26 + ascii_offset)
        else:
            encrypted_text += char
    return encrypted_text

def caesar_decrypt(encrypted_text: str, shift: int) -> str:
    """
    Decrypts the input encrypted text using the Caesar Cipher with the given shift value.

    Args:
        encrypted_text (str): The encrypted text to decrypt.
        shift (int): The shift value to use for decryption.

    Returns:
        str: The decrypted text.
    """
    decrypted_text = ""
    for char in encrypted_text:
        if char.isalpha():
            ascii_offset = 97 if char.islower() else 65
            decrypted_text += chr((ord(char) - ascii_offset - shift) % 26 + ascii_offset)
        else:
            decrypted_text += char
    return decrypted_text

def main():
    text = input("Enter the string: ")
    shift = int(input("Enter the shifting number: "))

    print(f"\nText: {text}")
    print(f"Shift: {shift}")
    encrypted_text = caesar_encrypt(text, shift)
    print(f"Cipher: {encrypted_text}")

    decrypted_text = caesar_decrypt(encrypted_text, shift)
    print(f"Original: {decrypted_text}")

if _name_ == "_main_":
    main()
